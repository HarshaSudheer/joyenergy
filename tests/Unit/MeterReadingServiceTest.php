<?php

namespace Tests\Unit;

use App\Models\MeterReadingsInitialize;
use App\Services\MeterReadingService;
use PHPUnit\Framework\TestCase;

class MeterReadingServiceTest extends TestCase
{
    /**
     * Test the read Meter Readings endpoint
     *
     * @return
     */
    private static $meterReadingService;
    private static $meterReadingInitialize;

    public static function setUpBeforeClass(): void
    {
        parent::setUpBeforeClass(); // TODO: Change the autogenerated stub
        MeterReadingServiceTest::$meterReadingInitialize = new MeterReadingsInitialize();
        MeterReadingServiceTest::$meterReadingService = new MeterReadingService(MeterReadingServiceTest::$meterReadingInitialize);
    }

    /**
     * @test
     */
    public function Should_Return_Readings_For_Valid_Meter_Id()
    {
        $readings = MeterReadingServiceTest::$meterReadingService->getReadings("smart-meter-1");
        $this->assertCount(5, $readings);
    }

    /**
     * @test
     */
    public function Should_Return_Empty_Array_For_Invalid_Meter_Id()
    {
        $readings = MeterReadingServiceTest::$meterReadingService->getReadings("unknown-id");
        $this->assertCount(0, $readings);
    }

    public static function tearDownAfterClass(): void
    {
        parent::tearDownAfterClass(); // TODO: Change the autogenerated stub
    }
}
